combination of the mate-pair and the graph distances to find the exact match

\textbf{Path-Set Processing As }
\begin{itemize}
\item A path is called a \emph{mandatory} path if it corresponds to a substring of the genome. For a given path-set $PS_i$, if all of 
its paths are mandatory paths, we replace this set by  $|PS_i|$ singleton  path sets, each contains a single path in $PS_i$. 
\item Path-set $PS_i$ is \emph{strictly contained} in path-set $PS_j$ if there exists a bijection mapping $f$ from $PS_i$ to $PS_j$ 
such that $p$ is strictly contained in $f(p)$ for every $p \in PS_i$
\end{itemize}





The set of path-sets goes through a more complicated process, called \emph{mate-paired transformation filtering}, where we conbine
the information of individual mate-pair transformation and produce a better result. The target for the filtering procedure is 
the set with more than one members, since this may correspond to an ambiguitiy in 
identifying the \emph{genome paths} (paths that the genome traverses) between  a pair of edges.

As a result, the $(k,d)$-spectrum is transformed into a set of 
edge-pairs. The set of edge-pairs generated from the $(k,d)$-spectrum of a string $S$ 
is called an \emph{$d$-edge-pair spectrum} of $S$. For each edge pair $(e_a, e_b,p)$, 
we find all paths  that start at $e_a$ and end at $e_b$, each has length $p$. In general, when $d$ 
is large and the graph is complicated, this procedure may be time consuming. 


Given an edge-pair $(e_a, e_b, p)$, if there exists a unique path that starts with $e_a$ and
ends with $e_b$ and has length equal to $p + l(e_b)$,
%describe the all paths
%describe the data when all paths failed

%describe statistics
%describe gluing rule


\section{Results}

\begin{figure}
    \begin{center}
    \includegraphics[scale =0.8] {fig/e200.eps}
    \label{fig:e200}
    \caption{Histogram of the number of paths between edge pairs for insert size 200 (paths that contain a single condensed edge are omitted)}
    \end{center}
\end{figure}

\begin{figure}
    \begin{center}
    \includegraphics[scale =1] {fig/e600.eps}
    \label{fig:e200}
    \caption{Histogram of the number of paths between edge pairs for insert size 600 (paths that contain a single condensed edge are omitted)}
    \end{center}
\end{figure}

When there is a region with no coverage or the error of distance
estimation is large, such path may not exist. When the insert size is large and/or the graph is complicated, finding all
paths that match a certain distance range may be computationally expensive. In our implementation, this procedure will terminate
after 2000 iterations. In the cases that no such path is found, we can represent them by a special path $e_1 p^* e_2$ where 
$p^*$ can match any path of length $\bar{p} - l(e_1)$  and transform the consensus edge-pair to a set containing 
this special path. Therefore, the set of consensus edge-pairs is transformed to a set of set of paths (including the special paths). 


The mate-pair transformation procedure \cite{Pevzner01b} looks for a path between the two reads of a mate pair that approximately match 
the length of insert size. If exactly one such path was found, then the sequence that corresponds to this path can be used
to filled in the gap between the mate pair reads. Here, for each edge pair $(e_1,e_2,\mathbf{h})$, where the distance is well estimated,
we look for instead of mate-pair we look for all paths between two condensed edges in 
the de Bruijn graph that match 


Essentially, this amounted
to transforming two mated reads into one long read where the gap between the
mates was filled in with the nucleotide sequence representing the found path,
thus potentially connecting the surrounding regions of a repeat. This approach 
have been utilized many current assemblers, including Euler\cite{Chaisson09}, 
Velvet~\cite{Zerbino08}, AllPaths\cite{Butler08}. 



can use the peaks (local maximum) of the distribution  as a way to estimate the genomic distance between $e_1$ and $e_2$. When 
there  is a single peak in the distribution, presumably at $d_0'$, we can easily estimate the distance between $e_1$ and $e_2$ as $d_0'$. When 
there are multiple peaks in the distribution, it's more likely that it is a result of a mixture of multiple distributions and our task is to separate
it into multiple distributions that were created by some slightly different repeats that share both end $e_1$ and $e_2$. When the 
distributions are well separated, for instance $\mathbf{h(x)} = h_1(x) + \ldots + h_t(x)$, we can transform $(e_1, e_2, h)$ into $t$ separated
edge pairs $\{(e_1, e_2, \mathbf{h_i}) | i = 1 \ldots t\}$.  Each edge-pair $(e_1, e_2, h_i)$ corresponds to one or multiple repeats that 
start with  $e_1$ and ends at $e_2$ that  the distance between $e_1$ and $e_2$ is supported by distribution $h_i$. When the distribution $h$ is not
well separated, each local maximum corresponds to a \emph{suspected} distribution of mate-pairs that supports the genomic distance 
between $e_1$ and $e_2$. In this case, we can not further separate the edge-pairs. 








%    Using this property, \cite{Pevzner01b}  proposed a heuristic
%    to look for a path between the two reads of a mate pair with a length of the
%    insert size. If exactly one such path was found, then a \emph{mate pair transformation}
%    could be applied to ``unwind'' this path in the graph. Essentially, this amounted
%    to transforming two mated reads into one long read where the gap between the
%    mates was filled in with the nucleotide sequence representing the found path,
%    thus potentially connecting the surrounding regions of a repeat. This approach 
%    have been utilized many current assemblers, including Euler\cite{Chaisson09}, 
%    Velvet~\cite{Zerbino08}, AllPaths\cite{Butler08}. 
%    identified by a pair of edge and position $(\langle e_i,p_i \rangle, \langle e_j, p_j \rangle)$ 
%    in the condensed graph.


Let consider a set of all $k$-pair generated from the paired reads dataset.
We construct the de Bruijn graph $G$ from the set of $k$-mers 
 Let $B(V,E,l)$ be a condensed de Bruijn graph \cite{Pevzner01} 
constructed  from the set of $k$-mers ($l(e)$ represents the length of the 
edge $e$.  %For each edge $e_i$, $l(e_i)$ is the length of edge $e_i$. 
Every $(k)$-pair $(a|b)$ maps to edges $e_a$, $e_b$ at positions $p_a$, $p_b$ correspondingly.%map not defined
For each $(k,d)$-mer $(a|b)$, we form an \emph{edge-pair}, represented by a triple
$(e_a, e_b, f)$ where $p = d_0 + p_a -p_b$ represents the genomic distance between the 
starts of $e_a$ and $e_b$ estimated solely by the corresponding $k$-pair. Since there may be
many $k$-pairs that maps to the pair of  edges $e_a$ and $e_b$, the genomic 
distance between $e_a$ and $e_b$ can be estimated more exactly.  

For each pair of edges $e_a$, $e_b$, we obtain a set of edge-pair $EP= \{e_a, e_b, p_i\}$. We define
edge-pair $(e_a, e_b, p_i)$ and $(e_a, e_b, p_j)$ as a compatible edge-pair if $|p_i - p_j| \leq \Delta$. 
Compatible edge-pairs form connected components. For each connected component, we create a 
consensus edge-pair $(e_a,e_b, \bar{p}, \delta)$ where $\bar{p}$ is the average value of distances $p_i$ in 
the component, and $\delta$ is the mean square error of the estimation ($\delta = variance^2/size\: of \: the\: cluster$). 


\textbf{From consensus edge-pairs to path-set}


% define mandatory path
% define path processing




%\begin{figure}
%\begin{center}
%\subfigure[Mandatory Paths]{
%       \includegraphics[scale =1] {fig/mandatorypath1.eps}
%          \label{fig:mandatory}
%           }
%
% \subfigure[Nonmandatory Paths]{
%        \includegraphics[scale =1] {fig/mandatorypath2.eps}
%           \label{fig:nonmandatory}
%            }
%\caption{Mandatory and Nonmandatory Paths. (a) Both $e_1e_2e_4$ and $e_1,e_3,e_4$ are mandatory paths. (b) $e_1e_2e_4$ and $e_1e_3e_4$ are
%nonmandatory paths}
%\label{fig:uniquepath}
%\end{center}
%\end{figure}

While edge-pair is similar to mate-pair in that both of them  have a gap sequence between both ends, edge-pair possesses multiple advantages.
In an edge-pair, the distance between both ends is better estimated and therefore more suitable for the previous methods for resolving repeats, e.g.,  mate-pair transformation~\cite{Pevzner01},
. Moreover, since the edge-pairs set  is a compact representation of the original mate-pairs data, many 
redundant operations could be omitted directly, for instances, in mate-pair transformation, multiple function calls for mate-pairs that map the same pair of condensed edges can 
be replaced by a single mate-pair transformation on the corresponding edge-pair. 

While the use of edge-paired data to mate-paired transformation is straightforward, adapting it to paired de Bruijn graph platform is involving and can solely  be
a topic for future research. The reasons is that, in different from the $(k,d_0,\Delta)$-mers data, edge-pairs have different length on their left and right edges.  
In the next section, rather than focusing on the use of edge-pairs and adapt it to each of the previous repeat resolving methods individually, we combine  mate-pair 
transformation with an ad hoc version of paired de Bruijn graph on edge-pairs to build a more advanced platform: \emph{path-set} graph. 
