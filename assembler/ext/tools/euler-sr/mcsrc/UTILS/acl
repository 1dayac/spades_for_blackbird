#!/usr/bin/env perl

if ($#ARGV >= 0 && $argv[0] eq "-help") {
  print "usage: $0 infile [-c]\n";
  print "-c will print the contig name\n";
	print "-a will add all contigs\n";
  exit(0);
}
if ($#ARGV < 0) {
 $IN = STDIN;
}
else {
$infile = shift @ARGV;
$printContig = 0;
$minLength = -1;
$step = 2;
while ($#ARGV >= 0) {
  $opt = shift @ARGV;
  if ($opt eq "-c") {
    $printContig = 1;
  }
  elsif ($opt eq "-minLength") {
    $minLength = shift @ARGV;
  }
	elsif ($opt eq "-a") {
			$step = 1;
	}
}

open($IN, "$infile") or die "cannot open $infile\n";
}

$contigSize = -1;
$contig = "";
$first = 1;
@contigLengths = ();
while(<$IN>) {
  $line = $_;
  chomp($line);
  if (/^>/) {
    if ($first == 0) {
				if ($contigSize > 0 ) {
						if ($printContig == 1) {
#								print "$contigSize $contig\n";
						} 
						else {
						  if ($minLength == -1 || $contigSize >= $minLength) {
									push @contigLengths, $contigSize;
						  }
						}
				}
    }
    $first = 0;
    $contigSize = 0;
		$line =~ />(.*)/;
    $contig = $1;
  }
  else {
    $l = length($line);
    $contigSize += length($line);
  }
}

if ($contigSize > 0 ) {
  if ($printContig == 1) {

  } 
  else {
    if ($minLength == -1 || $minLength <= $contigSize) {
				push @contigLengths, $contigSize;
		}
  }
}

@contigLengthsSorted = sort {$a <=> $b} @contigLengths;

$sum = 0;
for ($c = 0; $c <= $#contigLengthsSorted; $c+=$step) {
		$sum += $contigLengthsSorted[$c];
}
$nc = scalar @contigLengthsSorted / $step;
print "$sum\n";
print "$nc\n";
