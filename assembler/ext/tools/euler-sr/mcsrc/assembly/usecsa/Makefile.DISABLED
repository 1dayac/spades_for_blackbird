include ../../common.mak

#CPPOPTS =  -g -fPIC -DDEBUG 
#ifneq  (, $filter( x86_64%, $(MACHTYPE)))
#  CPPOPTS = -g -fPIC -D__ia64__ 
#endif

EXECS = buildVertexList \
	 checkTupleList \
	 markErroneousEdges \
	 rmvDuplicates 

.PHONY: libassemble
.PHONY: arch_dir $(EXECS)

all: $(CURDIR)/make.dep $(EXECS) install 

include ../../make.rules
include $(CURDIR)/make.dep


buildVertexList: arch_dir $(MACHTYPE)/buildVertexList
markErroneousEdges: arch_dir  $(MACHTYPE)/markErroneousEdges
checkTupleList: arch_dir $(MACHTYPE)/checkTupleList
rmvDuplicates: arch_dir $(MACHTYPE)/rmvDuplicates


$(LIBHASH):
	cd $(SRC_DIR)/lib/hash && $(MAKE) 

$(LIBBBBWT):
	cd $(EUSRC)/lib/bbbwt && $(MAKE) 

$(MACHTYPE)/checkTupleList: ${MACHTYPE}/CheckTupleList.o $(LIBBBBWT)  $(LIBASSEMBLE) $(LIBALIGN)
	$(CPP) $(CPPOPTS_lib) -o $@ $< $(LIBDIR) -lbbbwt -lassemble  -lcommon -lalign

$(MACHTYPE)/markErroneousEdges: ${MACHTYPE}/MarkErroneousEdges.o $(LIBBBBWT)  $(LIBASSEMBLE) $(LIBALIGN)
	$(CPP) $(CPPOPTS_lib) -o $@ $< $(LIBDIR) -lbbbwt -lassemble -lcommon -lalign

$(MACHTYPE)/buildVertexList: ${MACHTYPE}/BuildVertexList.o $(LIBBBBWT)
	$(CPP) $(CPPOPTS_lib) -o $@ $< $(LIBDIR) -lbbbwt -lcommon
#	$(CPP) $(CPPOPTS_lib) $(INCLUDEDIR) $^ -o $@  $(LIBDIR) -lcommon -lbbbwt $(LIBS)

$(MACHTYPE)/rmvDuplicates: $(MACHTYPE)/RmvDuplicates.o $(LIBCOMMON) $(LIBBBBWT)
	$(CPP) $(CPPOPTS_lib) -o $@ $< $(LIBDIR) -lbbbwt -lcommon
#	$(CPP) $(CPPOPTS_lib) $(INCLUDEDIR) $< -o $@  $(LIBDIR) -lcommon $(LIBS) -lbbbwt

libassemble: $(LIBASSEMBLE)


$(LIBASSEMBLE):
	cd .. && $(MAKE) libassemble

$(LIBALIGN):
	cd $(EUSRC)/lib/align && $(MAKE)
