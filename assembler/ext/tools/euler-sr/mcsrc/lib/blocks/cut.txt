// from GlueSequenceb
  for (i = 0; i < refPath.size()-1; i++) {
    splitEnd   = std::min(endRef, refPath[i]->end[0]);
    SplitVertex(refStrand, splitStart, splitEnd, refSplitIn, refSplitIsect, refSplitOut);
    assert(refSplitIsect != NULL);
    refSplitIsect->AddCoords(qryStrand, 
			     startQry + (refSplitlitStart - startRef), 
			     startQry + (refSplitlitEnd - startRef));
    refSplitlitStart = refSplitlitEnd + 1;
  }
  refSplitlitEnd = endRef;
  RefSplitlitVertex(refStrand, refSplitlitStart, refSplitlitEnd,refSplitIn, refSplitIsect, refSplitOut);
  assert(refSplitIsect != NULL);  
  refSplitIsect->AddCoords(qryStrand, 
			   startQry + (refSplitlitStart - startRef), 
			   startQry + (refSplitlitEnd - startRef));

  // Now glue the ref vertex into the query vertex.
  splitStart = startQry;
  for (i = 0; i < qryPath.size()-1; i++) {
    qrySplitlitEnd   = std::min(endQry, qryPath[i]->end[0]);
    QrySplitlitVertex(qryStrand, qrySplitlitStart, qrySplitlitEnd, qrySplitIn, qrySplitIsect, qrySplitOut);
    assert(qrySplitIsect != NULL);
    qrySplitIsect->AddCoords(qryStrand, 
			     startRef + (qrySplitlitStart - startQry), 
			     startRef + (qrySplitlitEnd - startQry));
    qrySplitlitStart = qrySplitlitEnd + 1;
  }
  qrySplitlitEnd = endQry;
  QrySplitlitVertex(qryStrand, qrySplitlitStart, qrySplitlitEnd,qrySplitIn, qrySplitIsect, qrySplitOut);
  assert(qrySplitIsect != NULL);
  qrySplitIsect->AddCoords(qryStrand, 
			   startRef + (qrySplitlitStart - startQry), 
			   startRef + (qrySplitlitEnd - startQry));
