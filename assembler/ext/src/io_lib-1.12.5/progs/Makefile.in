# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = convert_trace$(EXEEXT) makeSCF$(EXEEXT) \
	extract_seq$(EXEEXT) extract_qual$(EXEEXT) \
	extract_fastq$(EXEEXT) index_tar$(EXEEXT) scf_dump$(EXEEXT) \
	scf_info$(EXEEXT) scf_update$(EXEEXT) get_comment$(EXEEXT) \
	hash_tar$(EXEEXT) hash_extract$(EXEEXT) hash_list$(EXEEXT) \
	trace_dump$(EXEEXT) hash_sff$(EXEEXT) append_sff$(EXEEXT) \
	ztr_dump$(EXEEXT) srf_dump_all$(EXEEXT) \
	srf_index_hash$(EXEEXT) srf_extract_linear$(EXEEXT) \
	srf_extract_hash$(EXEEXT) srf2fastq$(EXEEXT) \
	srf2fasta$(EXEEXT) srf_filter$(EXEEXT) srf_info$(EXEEXT) \
	srf_list$(EXEEXT) hash_exp$(EXEEXT)
subdir = progs
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/io_lib_config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_append_sff_OBJECTS = append_sff.$(OBJEXT)
append_sff_OBJECTS = $(am_append_sff_OBJECTS)
append_sff_DEPENDENCIES = $(top_builddir)/io_lib/libstaden-read.la
am_convert_trace_OBJECTS = convert_trace.$(OBJEXT)
convert_trace_OBJECTS = $(am_convert_trace_OBJECTS)
convert_trace_DEPENDENCIES = $(top_builddir)/io_lib/libstaden-read.la
am_extract_fastq_OBJECTS = extract_fastq.$(OBJEXT)
extract_fastq_OBJECTS = $(am_extract_fastq_OBJECTS)
extract_fastq_DEPENDENCIES = $(top_builddir)/io_lib/libstaden-read.la
am_extract_qual_OBJECTS = extract_qual.$(OBJEXT)
extract_qual_OBJECTS = $(am_extract_qual_OBJECTS)
extract_qual_DEPENDENCIES = $(top_builddir)/io_lib/libstaden-read.la
am_extract_seq_OBJECTS = extract_seq.$(OBJEXT)
extract_seq_OBJECTS = $(am_extract_seq_OBJECTS)
extract_seq_DEPENDENCIES = $(top_builddir)/io_lib/libstaden-read.la
am_get_comment_OBJECTS = get_comment.$(OBJEXT)
get_comment_OBJECTS = $(am_get_comment_OBJECTS)
get_comment_DEPENDENCIES = $(top_builddir)/io_lib/libstaden-read.la
am_hash_exp_OBJECTS = hash_exp.$(OBJEXT)
hash_exp_OBJECTS = $(am_hash_exp_OBJECTS)
hash_exp_DEPENDENCIES = $(top_builddir)/io_lib/libstaden-read.la
am_hash_extract_OBJECTS = hash_extract.$(OBJEXT)
hash_extract_OBJECTS = $(am_hash_extract_OBJECTS)
hash_extract_DEPENDENCIES = $(top_builddir)/io_lib/libstaden-read.la
am_hash_list_OBJECTS = hash_list.$(OBJEXT)
hash_list_OBJECTS = $(am_hash_list_OBJECTS)
hash_list_DEPENDENCIES = $(top_builddir)/io_lib/libstaden-read.la
am_hash_sff_OBJECTS = hash_sff.$(OBJEXT)
hash_sff_OBJECTS = $(am_hash_sff_OBJECTS)
hash_sff_DEPENDENCIES = $(top_builddir)/io_lib/libstaden-read.la
am_hash_tar_OBJECTS = hash_tar.$(OBJEXT)
hash_tar_OBJECTS = $(am_hash_tar_OBJECTS)
hash_tar_DEPENDENCIES = $(top_builddir)/io_lib/libstaden-read.la
am_index_tar_OBJECTS = index_tar.$(OBJEXT)
index_tar_OBJECTS = $(am_index_tar_OBJECTS)
index_tar_LDADD = $(LDADD)
am_makeSCF_OBJECTS = makeSCF.$(OBJEXT)
makeSCF_OBJECTS = $(am_makeSCF_OBJECTS)
makeSCF_DEPENDENCIES = $(top_builddir)/io_lib/libstaden-read.la
am_scf_dump_OBJECTS = scf_dump.$(OBJEXT)
scf_dump_OBJECTS = $(am_scf_dump_OBJECTS)
scf_dump_DEPENDENCIES = $(top_builddir)/io_lib/libstaden-read.la
am_scf_info_OBJECTS = scf_info.$(OBJEXT)
scf_info_OBJECTS = $(am_scf_info_OBJECTS)
scf_info_DEPENDENCIES = $(top_builddir)/io_lib/libstaden-read.la
am_scf_update_OBJECTS = scf_update.$(OBJEXT)
scf_update_OBJECTS = $(am_scf_update_OBJECTS)
scf_update_DEPENDENCIES = $(top_builddir)/io_lib/libstaden-read.la
am_srf2fasta_OBJECTS = srf2fasta.$(OBJEXT)
srf2fasta_OBJECTS = $(am_srf2fasta_OBJECTS)
srf2fasta_DEPENDENCIES = $(top_builddir)/io_lib/libstaden-read.la
am_srf2fastq_OBJECTS = srf2fastq.$(OBJEXT)
srf2fastq_OBJECTS = $(am_srf2fastq_OBJECTS)
srf2fastq_DEPENDENCIES = $(top_builddir)/io_lib/libstaden-read.la
am_srf_dump_all_OBJECTS = srf_dump_all.$(OBJEXT)
srf_dump_all_OBJECTS = $(am_srf_dump_all_OBJECTS)
srf_dump_all_DEPENDENCIES = $(top_builddir)/io_lib/libstaden-read.la
am_srf_extract_hash_OBJECTS = srf_extract_hash.$(OBJEXT)
srf_extract_hash_OBJECTS = $(am_srf_extract_hash_OBJECTS)
srf_extract_hash_DEPENDENCIES =  \
	$(top_builddir)/io_lib/libstaden-read.la
am_srf_extract_linear_OBJECTS = srf_extract_linear.$(OBJEXT)
srf_extract_linear_OBJECTS = $(am_srf_extract_linear_OBJECTS)
srf_extract_linear_DEPENDENCIES =  \
	$(top_builddir)/io_lib/libstaden-read.la
am_srf_filter_OBJECTS = srf_filter.$(OBJEXT)
srf_filter_OBJECTS = $(am_srf_filter_OBJECTS)
srf_filter_DEPENDENCIES = $(top_builddir)/io_lib/libstaden-read.la
am_srf_index_hash_OBJECTS = srf_index_hash.$(OBJEXT)
srf_index_hash_OBJECTS = $(am_srf_index_hash_OBJECTS)
srf_index_hash_DEPENDENCIES =  \
	$(top_builddir)/io_lib/libstaden-read.la
am_srf_info_OBJECTS = srf_info.$(OBJEXT)
srf_info_OBJECTS = $(am_srf_info_OBJECTS)
srf_info_DEPENDENCIES = $(top_builddir)/io_lib/libstaden-read.la
am_srf_list_OBJECTS = srf_list.$(OBJEXT)
srf_list_OBJECTS = $(am_srf_list_OBJECTS)
srf_list_DEPENDENCIES = $(top_builddir)/io_lib/libstaden-read.la
am_trace_dump_OBJECTS = trace_dump.$(OBJEXT)
trace_dump_OBJECTS = $(am_trace_dump_OBJECTS)
trace_dump_DEPENDENCIES = $(top_builddir)/io_lib/libstaden-read.la
am_ztr_dump_OBJECTS = ztr_dump.$(OBJEXT)
ztr_dump_OBJECTS = $(am_ztr_dump_OBJECTS)
ztr_dump_DEPENDENCIES = $(top_builddir)/io_lib/libstaden-read.la
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(append_sff_SOURCES) $(convert_trace_SOURCES) \
	$(extract_fastq_SOURCES) $(extract_qual_SOURCES) \
	$(extract_seq_SOURCES) $(get_comment_SOURCES) \
	$(hash_exp_SOURCES) $(hash_extract_SOURCES) \
	$(hash_list_SOURCES) $(hash_sff_SOURCES) $(hash_tar_SOURCES) \
	$(index_tar_SOURCES) $(makeSCF_SOURCES) $(scf_dump_SOURCES) \
	$(scf_info_SOURCES) $(scf_update_SOURCES) $(srf2fasta_SOURCES) \
	$(srf2fastq_SOURCES) $(srf_dump_all_SOURCES) \
	$(srf_extract_hash_SOURCES) $(srf_extract_linear_SOURCES) \
	$(srf_filter_SOURCES) $(srf_index_hash_SOURCES) \
	$(srf_info_SOURCES) $(srf_list_SOURCES) $(trace_dump_SOURCES) \
	$(ztr_dump_SOURCES)
DIST_SOURCES = $(append_sff_SOURCES) $(convert_trace_SOURCES) \
	$(extract_fastq_SOURCES) $(extract_qual_SOURCES) \
	$(extract_seq_SOURCES) $(get_comment_SOURCES) \
	$(hash_exp_SOURCES) $(hash_extract_SOURCES) \
	$(hash_list_SOURCES) $(hash_sff_SOURCES) $(hash_tar_SOURCES) \
	$(index_tar_SOURCES) $(makeSCF_SOURCES) $(scf_dump_SOURCES) \
	$(scf_info_SOURCES) $(scf_update_SOURCES) $(srf2fasta_SOURCES) \
	$(srf2fastq_SOURCES) $(srf_dump_all_SOURCES) \
	$(srf_extract_hash_SOURCES) $(srf_extract_linear_SOURCES) \
	$(srf_filter_SOURCES) $(srf_index_hash_SOURCES) \
	$(srf_info_SOURCES) $(srf_list_SOURCES) $(trace_dump_SOURCES) \
	$(ztr_dump_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
GREP = @GREP@
HAVE_ZLIB_FALSE = @HAVE_ZLIB_FALSE@
HAVE_ZLIB_TRUE = @HAVE_ZLIB_TRUE@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBCURL = @LIBCURL@
LIBCURL_CPPFLAGS = @LIBCURL_CPPFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBZ = @LIBZ@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_ENDIAN = @SET_ENDIAN@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
VERS_AGE = @VERS_AGE@
VERS_CURRENT = @VERS_CURRENT@
VERS_REVISION = @VERS_REVISION@
_libcurl_config = @_libcurl_config@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
convert_trace_SOURCES = convert_trace.c
convert_trace_LDADD = $(top_builddir)/io_lib/libstaden-read.la
get_comment_SOURCES = get_comment.c
get_comment_LDADD = $(top_builddir)/io_lib/libstaden-read.la
makeSCF_SOURCES = makeSCF.c
makeSCF_LDADD = $(top_builddir)/io_lib/libstaden-read.la
extract_seq_SOURCES = extract_seq.c
extract_seq_LDADD = $(top_builddir)/io_lib/libstaden-read.la
extract_qual_SOURCES = extract_qual.c
extract_qual_LDADD = $(top_builddir)/io_lib/libstaden-read.la
extract_fastq_SOURCES = extract_fastq.c
extract_fastq_LDADD = $(top_builddir)/io_lib/libstaden-read.la
index_tar_SOURCES = index_tar.c
scf_dump_SOURCES = scf_dump.c
scf_dump_LDADD = $(top_builddir)/io_lib/libstaden-read.la
scf_info_SOURCES = scf_info.c
scf_info_LDADD = $(top_builddir)/io_lib/libstaden-read.la
scf_update_SOURCES = scf_update.c
scf_update_LDADD = $(top_builddir)/io_lib/libstaden-read.la
hash_exp_SOURCES = hash_exp.c
hash_exp_LDADD = $(top_builddir)/io_lib/libstaden-read.la
hash_tar_SOURCES = hash_tar.c
hash_tar_LDADD = $(top_builddir)/io_lib/libstaden-read.la
hash_list_SOURCES = hash_list.c
hash_list_LDADD = $(top_builddir)/io_lib/libstaden-read.la
hash_sff_SOURCES = hash_sff.c
hash_sff_LDADD = $(top_builddir)/io_lib/libstaden-read.la
append_sff_SOURCES = append_sff.c
append_sff_LDADD = $(top_builddir)/io_lib/libstaden-read.la
hash_extract_SOURCES = hash_extract.c
hash_extract_LDADD = $(top_builddir)/io_lib/libstaden-read.la
trace_dump_SOURCES = trace_dump.c
trace_dump_LDADD = $(top_builddir)/io_lib/libstaden-read.la
ztr_dump_SOURCES = ztr_dump.c
ztr_dump_LDADD = $(top_builddir)/io_lib/libstaden-read.la
srf2fastq_SOURCES = srf2fastq.c
srf2fastq_LDADD = $(top_builddir)/io_lib/libstaden-read.la
srf2fasta_SOURCES = srf2fasta.c
srf2fasta_LDADD = $(top_builddir)/io_lib/libstaden-read.la
srf_dump_all_SOURCES = srf_dump_all.c
srf_dump_all_LDADD = $(top_builddir)/io_lib/libstaden-read.la
srf_extract_linear_SOURCES = srf_extract_linear.c
srf_extract_linear_LDADD = $(top_builddir)/io_lib/libstaden-read.la
srf_extract_hash_SOURCES = srf_extract_hash.c
srf_extract_hash_LDADD = $(top_builddir)/io_lib/libstaden-read.la
srf_index_hash_SOURCES = srf_index_hash.c
srf_index_hash_LDADD = $(top_builddir)/io_lib/libstaden-read.la
srf_filter_SOURCES = srf_filter.c
srf_filter_LDADD = $(top_builddir)/io_lib/libstaden-read.la
srf_info_SOURCES = srf_info.c
srf_info_LDADD = $(top_builddir)/io_lib/libstaden-read.la
srf_list_SOURCES = srf_list.c
srf_list_LDADD = $(top_builddir)/io_lib/libstaden-read.la
INCLUDES = -I${top_srcdir}
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  progs/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  progs/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
append_sff$(EXEEXT): $(append_sff_OBJECTS) $(append_sff_DEPENDENCIES) 
	@rm -f append_sff$(EXEEXT)
	$(LINK) $(append_sff_LDFLAGS) $(append_sff_OBJECTS) $(append_sff_LDADD) $(LIBS)
convert_trace$(EXEEXT): $(convert_trace_OBJECTS) $(convert_trace_DEPENDENCIES) 
	@rm -f convert_trace$(EXEEXT)
	$(LINK) $(convert_trace_LDFLAGS) $(convert_trace_OBJECTS) $(convert_trace_LDADD) $(LIBS)
extract_fastq$(EXEEXT): $(extract_fastq_OBJECTS) $(extract_fastq_DEPENDENCIES) 
	@rm -f extract_fastq$(EXEEXT)
	$(LINK) $(extract_fastq_LDFLAGS) $(extract_fastq_OBJECTS) $(extract_fastq_LDADD) $(LIBS)
extract_qual$(EXEEXT): $(extract_qual_OBJECTS) $(extract_qual_DEPENDENCIES) 
	@rm -f extract_qual$(EXEEXT)
	$(LINK) $(extract_qual_LDFLAGS) $(extract_qual_OBJECTS) $(extract_qual_LDADD) $(LIBS)
extract_seq$(EXEEXT): $(extract_seq_OBJECTS) $(extract_seq_DEPENDENCIES) 
	@rm -f extract_seq$(EXEEXT)
	$(LINK) $(extract_seq_LDFLAGS) $(extract_seq_OBJECTS) $(extract_seq_LDADD) $(LIBS)
get_comment$(EXEEXT): $(get_comment_OBJECTS) $(get_comment_DEPENDENCIES) 
	@rm -f get_comment$(EXEEXT)
	$(LINK) $(get_comment_LDFLAGS) $(get_comment_OBJECTS) $(get_comment_LDADD) $(LIBS)
hash_exp$(EXEEXT): $(hash_exp_OBJECTS) $(hash_exp_DEPENDENCIES) 
	@rm -f hash_exp$(EXEEXT)
	$(LINK) $(hash_exp_LDFLAGS) $(hash_exp_OBJECTS) $(hash_exp_LDADD) $(LIBS)
hash_extract$(EXEEXT): $(hash_extract_OBJECTS) $(hash_extract_DEPENDENCIES) 
	@rm -f hash_extract$(EXEEXT)
	$(LINK) $(hash_extract_LDFLAGS) $(hash_extract_OBJECTS) $(hash_extract_LDADD) $(LIBS)
hash_list$(EXEEXT): $(hash_list_OBJECTS) $(hash_list_DEPENDENCIES) 
	@rm -f hash_list$(EXEEXT)
	$(LINK) $(hash_list_LDFLAGS) $(hash_list_OBJECTS) $(hash_list_LDADD) $(LIBS)
hash_sff$(EXEEXT): $(hash_sff_OBJECTS) $(hash_sff_DEPENDENCIES) 
	@rm -f hash_sff$(EXEEXT)
	$(LINK) $(hash_sff_LDFLAGS) $(hash_sff_OBJECTS) $(hash_sff_LDADD) $(LIBS)
hash_tar$(EXEEXT): $(hash_tar_OBJECTS) $(hash_tar_DEPENDENCIES) 
	@rm -f hash_tar$(EXEEXT)
	$(LINK) $(hash_tar_LDFLAGS) $(hash_tar_OBJECTS) $(hash_tar_LDADD) $(LIBS)
index_tar$(EXEEXT): $(index_tar_OBJECTS) $(index_tar_DEPENDENCIES) 
	@rm -f index_tar$(EXEEXT)
	$(LINK) $(index_tar_LDFLAGS) $(index_tar_OBJECTS) $(index_tar_LDADD) $(LIBS)
makeSCF$(EXEEXT): $(makeSCF_OBJECTS) $(makeSCF_DEPENDENCIES) 
	@rm -f makeSCF$(EXEEXT)
	$(LINK) $(makeSCF_LDFLAGS) $(makeSCF_OBJECTS) $(makeSCF_LDADD) $(LIBS)
scf_dump$(EXEEXT): $(scf_dump_OBJECTS) $(scf_dump_DEPENDENCIES) 
	@rm -f scf_dump$(EXEEXT)
	$(LINK) $(scf_dump_LDFLAGS) $(scf_dump_OBJECTS) $(scf_dump_LDADD) $(LIBS)
scf_info$(EXEEXT): $(scf_info_OBJECTS) $(scf_info_DEPENDENCIES) 
	@rm -f scf_info$(EXEEXT)
	$(LINK) $(scf_info_LDFLAGS) $(scf_info_OBJECTS) $(scf_info_LDADD) $(LIBS)
scf_update$(EXEEXT): $(scf_update_OBJECTS) $(scf_update_DEPENDENCIES) 
	@rm -f scf_update$(EXEEXT)
	$(LINK) $(scf_update_LDFLAGS) $(scf_update_OBJECTS) $(scf_update_LDADD) $(LIBS)
srf2fasta$(EXEEXT): $(srf2fasta_OBJECTS) $(srf2fasta_DEPENDENCIES) 
	@rm -f srf2fasta$(EXEEXT)
	$(LINK) $(srf2fasta_LDFLAGS) $(srf2fasta_OBJECTS) $(srf2fasta_LDADD) $(LIBS)
srf2fastq$(EXEEXT): $(srf2fastq_OBJECTS) $(srf2fastq_DEPENDENCIES) 
	@rm -f srf2fastq$(EXEEXT)
	$(LINK) $(srf2fastq_LDFLAGS) $(srf2fastq_OBJECTS) $(srf2fastq_LDADD) $(LIBS)
srf_dump_all$(EXEEXT): $(srf_dump_all_OBJECTS) $(srf_dump_all_DEPENDENCIES) 
	@rm -f srf_dump_all$(EXEEXT)
	$(LINK) $(srf_dump_all_LDFLAGS) $(srf_dump_all_OBJECTS) $(srf_dump_all_LDADD) $(LIBS)
srf_extract_hash$(EXEEXT): $(srf_extract_hash_OBJECTS) $(srf_extract_hash_DEPENDENCIES) 
	@rm -f srf_extract_hash$(EXEEXT)
	$(LINK) $(srf_extract_hash_LDFLAGS) $(srf_extract_hash_OBJECTS) $(srf_extract_hash_LDADD) $(LIBS)
srf_extract_linear$(EXEEXT): $(srf_extract_linear_OBJECTS) $(srf_extract_linear_DEPENDENCIES) 
	@rm -f srf_extract_linear$(EXEEXT)
	$(LINK) $(srf_extract_linear_LDFLAGS) $(srf_extract_linear_OBJECTS) $(srf_extract_linear_LDADD) $(LIBS)
srf_filter$(EXEEXT): $(srf_filter_OBJECTS) $(srf_filter_DEPENDENCIES) 
	@rm -f srf_filter$(EXEEXT)
	$(LINK) $(srf_filter_LDFLAGS) $(srf_filter_OBJECTS) $(srf_filter_LDADD) $(LIBS)
srf_index_hash$(EXEEXT): $(srf_index_hash_OBJECTS) $(srf_index_hash_DEPENDENCIES) 
	@rm -f srf_index_hash$(EXEEXT)
	$(LINK) $(srf_index_hash_LDFLAGS) $(srf_index_hash_OBJECTS) $(srf_index_hash_LDADD) $(LIBS)
srf_info$(EXEEXT): $(srf_info_OBJECTS) $(srf_info_DEPENDENCIES) 
	@rm -f srf_info$(EXEEXT)
	$(LINK) $(srf_info_LDFLAGS) $(srf_info_OBJECTS) $(srf_info_LDADD) $(LIBS)
srf_list$(EXEEXT): $(srf_list_OBJECTS) $(srf_list_DEPENDENCIES) 
	@rm -f srf_list$(EXEEXT)
	$(LINK) $(srf_list_LDFLAGS) $(srf_list_OBJECTS) $(srf_list_LDADD) $(LIBS)
trace_dump$(EXEEXT): $(trace_dump_OBJECTS) $(trace_dump_DEPENDENCIES) 
	@rm -f trace_dump$(EXEEXT)
	$(LINK) $(trace_dump_LDFLAGS) $(trace_dump_OBJECTS) $(trace_dump_LDADD) $(LIBS)
ztr_dump$(EXEEXT): $(ztr_dump_OBJECTS) $(ztr_dump_DEPENDENCIES) 
	@rm -f ztr_dump$(EXEEXT)
	$(LINK) $(ztr_dump_LDFLAGS) $(ztr_dump_OBJECTS) $(ztr_dump_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/append_sff.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/convert_trace.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/extract_fastq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/extract_qual.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/extract_seq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/get_comment.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hash_exp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hash_extract.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hash_list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hash_sff.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hash_tar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/index_tar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/makeSCF.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scf_dump.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scf_info.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scf_update.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/srf2fasta.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/srf2fastq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/srf_dump_all.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/srf_extract_hash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/srf_extract_linear.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/srf_filter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/srf_index_hash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/srf_info.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/srf_list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trace_dump.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ztr_dump.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
