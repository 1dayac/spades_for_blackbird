; input options:

input_dir	      ./data/input/E.Coli.K12.MG1655/
output_dir	      ./data/debruijn/
dataset 	      SC_FULL
reference_genome  MG1655-K12.fasta.gz

; paired (1) or unpaired (0, for quick debug and algorithms testing) mode
paired_mode false

; rectangle_mode (1) or not (0)
rectangle_mode	false

; set to true to obtain paired info from genome mapping rather than from paired reads
etalon_info_mode  false

start_from begin   ; Full run.
;start_from after_filling  ; Run with previous constructed graph.
;start_from after_simplify  ; Run with previous constructed and simplified graph.
;start_from before_resolve  ; Same as previous but without loading conjugate graph

; tip clipper:

tc
{
   	max_tip_length_div_K	4.0
	max_coverage			1000
	max_relative_coverage	100.0   ; tip_cov < this * not_tip_cov
}

; bulge remover:

br
{
	max_length_div_K	    5
	max_coverage			1000.0
	max_relative_coverage	100.0 	; bulge_cov < this * not_bulge_cov
	max_delta				2.1
	max_relative_delta		0.1
}

; erroneous connections remover:

ec
{
	max_coverage		20.0
	max_length_div_K	3
}

cec
{
	max_length		100
	coverage_gap		5.0
	sufficient_neighbour_length 1000		
}

; distance estimator:

de
{
	delta			      10
	linkage_distance	10
	max_distance		75
}

;repeat_resolving 

rr
{
	mode		3	
}

; consensus

uncorrected_reads	none

; different datasets:

ECOLI_EMUL
{
	first 	EAS20_8/emul/MG1655-K12_emul1.fastq.gz
	second	EAS20_8/emul/MG1655-K12_emul2.fastq.gz
	RL		100		; read length
	IS 	   220 	; insert size
	LEN	   4639675 ; total size
}
 
QUAKE_CROPPED_1K
{
	first	EAS20_8/quaked/cropped/s_6.first1000_1.fastq.gz
	second	EAS20_8/quaked/cropped/s_6.first1000_2.fastq.gz
	RL		100		; read length
	IS	      220 	; insert size
	LEN	   1000 	; total size
}

QUAKE_CROPPED_10K
{
	first	EAS20_8/quaked/cropped/s_6.first10000_1.fastq.gz
	second	EAS20_8/quaked/cropped/s_6.first10000_2.fastq.gz
	RL		100		; read length
	IS		220 	; insert size
	LEN		10000 	; total size
}

QUAKE_CROPPED_100K
{
	first	EAS20_8/quaked/cropped/s_6.first100000_1.fastq.gz
	second	EAS20_8/quaked/cropped/s_6.first100000_2.fastq.gz
	RL		100		; read length
	IS		220 	; insert size
	LEN		100000 	; total size
}

QUAKE_CROPPED_400K
{
	first	EAS20_8/quaked/cropped/s_6.first400000_1.fastq.gz
	second	EAS20_8/quaked/cropped/s_6.first400000_2.fastq.gz
	RL		100		; read length
	IS		220 	; insert size
	LEN		400000 	; total size
}

QUAKE_FULL
{
	first	EAS20_8/quaked/s_6_1.cor.fastq.gz
	second	EAS20_8/quaked/s_6_2.cor.fastq.gz
	RL		100		; read length
	IS		220 	; insert size
	LEN		4639675 ; total size
}

EAS600_QUAKE_CROPPED_1K
{
	first	EAS600_70/quaked/cropped/E.Coli_600.first1000_1.fastq.gz
	second	EAS600_70/quaked/cropped/E.Coli_600.first1000_2.fastq.gz
	RL		100		; read length
	IS		480 	; insert size
	LEN		1000 	; total size
}

EAS600_QUAKE_CROPPED_10K
{
	first	EAS600_70/quaked/cropped/E.Coli_600.first10000_1.fastq.gz
	second	EAS600_70/quaked/cropped/E.Coli_600.first10000_2.fastq.gz
	RL		100		; read length
	IS		480 	; insert size
	LEN		10000 	; total size
}

EAS600_QUAKE_CROPPED_100K
{
	first	EAS600_70/quaked/cropped/E.Coli_600.first100000_1.fastq.gz
	second	EAS600_70/quaked/cropped/E.Coli_600.first100000_2.fastq.gz
	RL		100		; read length
	IS		480 	; insert size
	LEN		100000 	; total size
}

EAS600_QUAKE_CROPPED_400K
{
	first	EAS600_70/quaked/cropped/E.Coli_600.first400000_1.fastq.gz
	second	EAS600_70/quaked/cropped/E.Coli_600.first400000_2.fastq.gz
	RL		100		; read length
	IS		480 	; insert size
	LEN		400000 	; total size
}

EAS600_QUAKE_FULL
{
	first	EAS600_70/quaked/ERR022075_1.cor.fastq.gz
	second	EAS600_70/quaked/ERR022075_2.cor.fastq.gz
	RL		100		; read length
	IS		480 	; insert size
	LEN		4639675	; total size
}

SC_NEW_1
{
	first	SC/2908_tau1_00_left.fastq.gz
	second	SC/2908_tau1_00_right.fastq.gz
	RL		100	; read length
	IS		270 	; insert size
	LEN		4639675	; total size
}

SC_NEW_2
{
	first	SC/2908_tau1_02_left.fastq.gz
	second	SC/2908_tau1_02_right.fastq.gz
	RL		100	; read length
	IS		270 	; insert size
	LEN		4639675	; total size
}

SC_NEW_3
{
	first	SC/3008_tau1_095_02_left.fastq.gz
	second	SC/3008_tau1_095_02_right.fastq.gz
	RL		100	; read length
	IS		270 	; insert size
	LEN		4639675	; total size
}

SC_FULL
{
	first	SC_OLD/left.fastq.gz
	second	SC_OLD/right.fastq.gz
	RL		100	; read length
	IS		270 	; insert size
	LEN		4639675	; total size
}

SC_EULER_FULL
{
	first	SC_EULER/sc_1.cor.fasta.gz
	second	SC_EULER/sc_2.cor.fasta.gz
	RL		100	; read length
	IS		270 	; insert size
	LEN		4639675	; total size
}
